QT5 SNOW LEOPARD EDITION
========================

QT5 SLE is a fork of the Qt 5.3.2 branch from qt-everywhere-opensource-src-5.3.2.tar.gz file distributed source code. Unfortunately it looks like it was removed from the qt5 archive (https:/download.qt.io/archive/qt/5.3/) but there are mirrors for it.

Qt 5.3.2 is the last snow leopard compatible version. It was only available via compilation of source, no .dmg or .pkg provided. This source code is tested with Xcode 4.2 for Snow Leopard.


Patches are applied to allow for proper compilation (clang 3.0 is the target, no c++11) and important fixes. 

The source code includes the following improvements:

- https://codereview.qt-project.org/c/qt/qtbase/+/87048
- https://bugreports.qt.io/browse/QTBUG-38568
- https://codereview.qt-project.org/c/qt/qtdeclarative/+/84760
- https://bugreports.qt.io/browse/QTBUG-40039


I have heard it's possible to get a later version of gcc on the mac through macports, but with Snow Leopard's SSL expired certificate, it is difficult if not impossible to use macports for fetching and building software to expand the system. 

I will be taking Windows XP bug reports as I would like to eventually ensure some compatibility with that OS as well.


Here is the command I use to configure Qt 5.3.2 SLE:

    ./configure -no-c++11 -no-sql-mysql -qt-sql-sqlite -sdk macosx10.6 -I /usr/local/pgsql/include/ -L /usr/local/pgsql/lib/ -qt-sql-psql -debug-and-release -nomake tests -nomake examples -opensource -confirm-license

(Remove the psql flags if you are not compiling for that. You will need psql installed via source, as the binary version and the binaries zip file cause zlib conflicts.)

HOW TO BUILD QT5
================


 Synopsis
 ========

   System requirements
   ------------------

    - Perl 5.8 or later
    - Python 2.7 or later
    - C++ compiler supporting the C++98 standard

     For other platform specific requirements,
     please see section "Setting up your machine" on:
     http://qt-project.org/wiki/Get_The_Source

   Optional requirements
   ---------------------

   - OpenSSL for SSL sockets or HTTPS
   - Wayland

   New dependencies in Qt 5
   ------------------------

     Linux: On systems running X11, the XCB libraries are required for
     the platform plugin to build. qtbase/src/plugins/platforms/xcb/README
     lists the required packages.

     Qt 5 can make use of the ICU libraries providing Unicode and Globalization
     support (see http://site.icu-project.org/). They are required for building
     QtWebKit.
     On Linux, they will be auto-detected.
     On Windows, they need to be manually installed and the "include" and "lib"
     folders of the ICU installation must be appended to the INCLUDE and LIB
     environment variables after calling the Windows SDK setup script.
     The "bin" folder of the ICU installation should be appended to the PATH
     environment variable in order to for the DLLs to be found at run-time.

   Linux, Mac:
   -----------

     cd <path>/qt-everywhere-opensource-src-<version>
     ./configure -prefix $PWD/qtbase -opensource -nomake tests
     make -j 4

   Windows:
   --------

     Open a Windows SDK (7.0, 7.1 or later) command prompt. Ensure that the
     following tools can be found in the path:
     * Perl version 5.12 or later   [http://www.activestate.com/activeperl/]
     * Python version 2.7 or later  [http://www.activestate.com/activepython/]
     * Ruby version 1.9.3 or later  [http://rubyinstaller.org/]

     cd <path>\qt-everywhere-opensource-src-<version>
     configure -prefix %CD%\qtbase -opensource -nomake tests
     nmake // jom // mingw32-make

     To accelerate the bootstrap of qmake with MSVC, it may be useful to pass
     "-make-tool jom" on the configure command line. If you do not use jom,
     adding "/MP" to the CL environment variable is a good idea.

 More details follow.

 Build!
 ======

 A typical `configure; make' build process is used.

 Some relevant configure options (see configure -help):

 -release              Compile and link Qt with debugging turned off.
 -debug                Compile and link Qt with debugging turned on.
 -nomake tests         Disable building of tests to speed up compilation
 -nomake examples      Disable building of examples to speed up compilation
 -confirm-license      Automatically acknowledge the LGPL 2.1 license.

 Example for a release build:
 (adjust the `-jN' parameter as appropriate for your system)

   ./configure -prefix $PWD/qtbase -opensource
   make -j4

 Example for a developer build:
 (enables more autotests, builds debug version of libraries, ...)

   ./configure -developer-build -opensource
   make -j4

 See output of `./configure -help' for documentation on various options to
 configure.

 The above examples will build whatever Qt5 modules have been enabled by
 default in the build system.

 It is possible to build selected modules with their dependencies by doing
 a `make module-<foo>'.  For example, to build only qtscript and qtwebkit,
 and the modules they depend on:

   ./configure -prefix $PWD/qtbase -opensource
   make -j4 module-qtscript module-qtwebkit

 This can save a lot of time if you are only interested in a subset of Qt5.


 Hints
 =====

 The submodule repository qtrepotools contains useful scripts for
 developers and release engineers. Consider adding qtrepotools/bin
 to your PATH environment variable to access them.

 The qt5_tool in qtrepotools has some more features which may be of interest.
 Try `qt5_tool --help'.


 Building Qt5 from git
 =====================
 See http://qt-project.org/wiki/Building-Qt-5-from-Git and README.git
 for more information.
 See http://qt-project.org/wiki/Qt-5 for the reference platforms.


 Documentation
 =============

 After configuring and compiling Qt, building the documentation is possible by running
 "make docs".

 After having built the documentation, you need to install it with the following
 command:

    make install_docs

 The documentation is installed in the path set to $QT_INSTALL_DOCS.
 Running "qmake -query" will list the value of QT_INSTALL_DOCS.

 Information about Qt 5's documentation is located in qtbase/doc/README
 or in the following page: http://qt-project.org/wiki/Qt5DocumentationProject

 Note: Building the documentation is only tested on desktop platforms.
